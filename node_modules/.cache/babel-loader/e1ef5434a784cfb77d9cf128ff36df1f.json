{"ast":null,"code":"var _jsxFileName = \"/Users/nathangwyn/Desktop/ck-blog BACKUP/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDescription(res.data.description); // console.log(location)\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        description\n      }); //   window.location.reload();\n\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePost--image\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"singlePost--title-input\",\n        type: \"text\",\n        value: title,\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePost--title\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePost--edit\",\n          onClick: () => setUpdateMode(true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePost--icon fa-solid fa-pen-to-square\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePost--icon fa-solid fa-trash\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePost--info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePost--author\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePost--date\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePost--description-input\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePost--description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePost--button\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"z/x0gSebzRhH787s/HOG8djlD2I=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["Link","useLocation","useEffect","useState","useContext","Context","axios","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","description","setDescription","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"sources":["/Users/nathangwyn/Desktop/ck-blog BACKUP/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport axios from \"axios\";\n\nexport default function SinglePost() {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDescription(res.data.description);\n      // console.log(location)\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        description,\n      });\n    //   window.location.reload();\n    setUpdateMode(false)\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        {post.photo && (\n          <img className=\"singlePost--image\" src={PF + post.photo} alt=\"\" />\n        )}\n        {updateMode ? (\n          <input\n            className=\"singlePost--title-input\"\n            type=\"text\"\n            value={title}\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"singlePost--title\">\n            {title}\n            {/*if your current user of post, displays edit && delete */}\n            {post.username === user?.username && (\n              <div\n                className=\"singlePost--edit\"\n                onClick={() => setUpdateMode(true)}\n              >\n                <i className=\"singlePost--icon fa-solid fa-pen-to-square\"></i>\n                <i\n                  className=\"singlePost--icon fa-solid fa-trash\"\n                  onClick={handleDelete}\n                ></i>\n              </div>\n            )}\n          </h1>\n        )}\n        <div className=\"singlePost--info\">\n          <span className=\"singlePost--author\">\n            Author:\n            <Link to={`/?user=${post.username}`} className=\"link\">\n              <b>{post.username}</b>\n            </Link>\n          </span>\n          <span className=\"singlePost--date\">\n            {new Date(post.createdAt).toDateString()}\n          </span>\n        </div>\n        {updateMode ? (\n          <textarea\n            className=\"singlePost--description-input\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        ) : (\n          <p className=\"singlePost--description\">{description}</p>\n        )}\n        {updateMode && (\n          <button className=\"singlePost--button\" onClick={handleUpdate}>\n            Update\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}